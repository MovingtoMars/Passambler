--TEST--
Tests std module.

--INPUT--
import "std"

n = 1...10
std.Push(n, 20)
std.Push(n, 30)

a = 1...4
b = std.Shift(a)
std.Shift(a)

c = 10...20
d = []

for (0...5) {
    std.Push(d, std.Pop(c))
}

user = {"name" : "Raoul", "age" : 16}

multipleUsers = [user, {"name": "Sonja", "age": 18}, {"name": "Geert", "age": 20}, {"name": "Monja", "age": 5}]

writeln(std.Empty([]))
writeln(std.Empty([1, 2, 3]))
writeln(std.Empty(""))
writeln(std.Empty("Raoul"))

writeln(std.First("Raoul"))
writeln(std.First(1...3))

writeln(std.Last(1...3))

writeln(n)

writeln(std.Size(50...100))
writeln(std.Size("Raoul"))

writeln(a)
writeln(b)
writeln(c)
writeln(d)

writeln(std.Reverse(1...3))
writeln(std.Reverse("Raoul"))

writeln(std.Keys(user))
writeln(std.Values(user))

writeln(std.Contains("i like cats", "bears"))
writeln(std.Contains("i like dogs", "dogs"))
writeln(std.Contains(multipleUsers[1], "Sonja"))
writeln(std.Contains(multipleUsers[2], "Angelo"))
writeln(std.Contains(multipleUsers, user))
writeln(std.Contains(multipleUsers, 20))

writeln(std.IndexOf("hello world", "hello"))

writeln(std.Lcase("HeLLo WoRLd!"))
writeln(std.Ucase("HeLLo WoRLd!"))

writeln(std.Replace("I like bears", "bears", "cats"))
writeln(std.Replace("I like cats", "cats", "dogs"))

writeln(std.Split("My name is Raoul", " "))

writeln(std.ToNum("1") + std.ToNum(1))
writeln(std.ToBool(true) == std.ToBool("true"))
writeln(std.ToBool("true") == std.ToBool(false))
writeln(std.ToChar("hello"))

writeln(std.Join(["I", "like", "cats", "and", "dogs"], "-"))

writeln(std.Filter(multipleUsers, func(a) {
    return a["age"] >= 18
}))

--OUTPUT--
true
false
true
false
R
1
3
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30]
51
5
[3, 4]
1
[10, 11, 12, 13, 14]
[20, 19, 18, 17, 16, 15]
[3, 2, 1]
[l, u, o, a, R]
[name, age]
[Raoul, 16]
false
true
true
false
true
false
0
hello world!
HELLO WORLD!
I like cats
I like dogs
[My, name, is, Raoul]
2
true
false
h
I-like-cats-and-dogs
[{name=Sonja, age=18}, {name=Geert, age=20}]